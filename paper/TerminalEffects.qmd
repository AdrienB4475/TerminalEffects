---
title: "Studying Terminal Effects in Northern Elephant Seals"
format:
  html:
    echo: false
    fig-width: 7
    fig-height: 5
    code-fold: true
    code-tools: true
    warning: false
    toc: true
editor: visual
---

#Introduction

\tex A major question in ecology and evolution is why animals exhibit different forms of reproductive strategies. Some prioritize survival and future reproductive success, while others invest all they have at the cost of their own life. The terminal investment hypothesis states that animals in their last year of life, or no expectation of future reproduction, should invest significantly more into their current offspring (Williams 1966; Clutton-Brock 1984). When the chances of survival are low, the terminal investment strategy appears to be optimal as it increases the chance of reproductive success. However, when a female is in her reproductive prime, she should limit how much she invests in current offspring in order to conserve resources needed for future reproduction. (Hoffman 2010).

	In nature, animals exhibit different reproductive investment strategies. Cory’s shearwaters tend to exhibit a fixed investment strategy where regardless of age or injury, they invest the same level into offspring. (Navarro 2007) Poison dart frogs exhibit a flexible investment pattern, with females adjusting their parental effort based on whether or not a male is present or absent. When a male is absent, females would compensate by investing more in order to ensure offspring survival (Ringler 2015). Rhesus macaques experience senescence in reproduction where the quality of offspring produced decreases as they age due to deteriorating body condition. Older females produced infants with lower body masses and survival rates. Older mothers also spent more time with their infants during the first month postpartum indicating terminal investment may be present, although this increased investment did not correlate to infant fitness or survival in the end. (Hoffman 2010)

	Evidence for the terminal investment strategy is only beginning to be fully understood for mammals, and even less is known for marine mammals. Terminal investment refers to a strategy where individuals, typically in their later/last years of life, increase reproductive effort due to the reduced probability of future reproduction. This strategy can vary depending on the species’ life history. For instance, older Nile lechwe (Kobus megaceros) produce more male offspring than females, even though males generally incur higher reproductive costs (Bercovitch et al. 2009). In red deer (Cervus elaphus), maternal age is positively correlated with birth weight and offspring survival rates, demonstrating how aging impacts investment strategies (Clutton-Brock 1984). Additionally, nutritional constraints in older mothers can influence the size and survival of offspring, with well-nourished older mothers tending to produce heavier offspring and influencing whether or not terminal investment occurs (LaSharr et al. 2025). On the other hand, terminal investment for (insert species) was only seen in younger animals compared to older animals. To effectively study terminal investment, long-term data sets can be important, as they allow researchers to track the life history of individuals over time and measure changes in maternal investment across their lifespan.

\

	When terminal investment is not shown, animals tend to experience terminal effects, which are similar to the reproductive restraints or senescence that come with aging. As an animal approaches the end of its life, the trade-offs between reproduction and survival can become too high of a cost. These trade-offs may result in death or decreased reproductive performance in the last year of life, as resources are increasingly devoted to survival rather than reproduction. In some cases, this can lead to complete cessation of reproductive efforts, as the organism no longer has the capacity to invest in offspring. Additionally, these terminal effects may vary across species depending on life history strategies, with some animals exhibiting terminal investment to maximize reproductive output before death, while others may experience a rapid decline in fertility and overall health.  

 ![](https://lh7-rt.googleusercontent.com/docsz/AD_4nXeqZhXzGzyN6q_syuGLkQmbxii4xQWzFDzZXMRER3Xin86H9hLFJKGRD7wKq25FF-Whhuq0MlwaUe3VUxiFxI_5-B_ECHvkVDwaVMXH7N7mtYqt0htFJZb_PD_B7bVtH11-nMKk4g?key=82qYbtj45H1vnpUIQYawirzM)

(Figure 1: Differential parental investment patterns across species as they age. Cory’s shearwaters in the pink line represent a fixed investment pattern. Poison dart frogs represented in the green line show a flexible investment pattern as they approach their last year of life. Rhesus macaques show a senescent decline, in the red line, where reproduction decreases with age. Lastly, red deer represented by the blue line where due to terminal investment, their last offspring experiences the most investment. The seal in black is to represent where elephant seals fall in this graph.) 

Northern elephant seals are a marine predator (Condit et al., 2013) that inhabit the Western Pacific Ocean. Their species range spans along the west coast of Northern America, ranging from Baja California to Alaska (Le Boeuf & Laws 1994). These sexually dimorphic marine mammals experienced a near-extinction event due to over-hunting more than 100 years ago, presumed to be extinct in 1892 (Stewart et al., 1994), and have rebounded to a population of over 220,000 in the US and Mexico (Lowry et al., 2014). This species spends \~ 75% of their life at sea and comes to shore two times per year. The first haulout is the breeding season during mid-December to March and the second haul out is the molting season during mid-April to early July (Le Boeuf et al., 2019). Northern elephant seals typically come back to the same beach they were born every year. Researchers are able to track individual seals from birth to their last years of life, while also knowing a life history of the pup’s mother. 

Elephant seals produce a pup once a year, with the exception of some “skipping” a year. Additionally, they are capital breeders that rely purely on fat reserves to sustain their fast while on the beach, but also to nurse their pups. (Crocker et al. 2001). Because they are not eating while nursing, we can measure how well a mom did at sea, in terms of foraging, by measuring data such as pup mass at birth and at weaning (Le Boeuf 2019). One of the challenges for Northern elephant seals is that as a capital breeder, they experience high costs of reproduction. As a result, they may decrease in reproductive performance as they age (Clutton-Brock 1984, Payne 2024). This makes it hard to measure terminal investment when in combination with factors such as senescence. When investment decreases at older ages, it may indicate the presence of senescence, where the individual’s biological functions deteriorate with age. In contrast, if investment increases during their last year of life, regardless of reproductive experience, this pattern correlates with the terminal investment hypothesis, suggesting that individuals prioritize reproduction as the chance of future reproduction decreases or is unlikely. (Weladji et al. 2010). These differing patterns provide insights into how aging affects reproductive strategies and overall fitness.

Elephant seals are an ideal candidate to study the terminal investment hypothesis due to having a long term data set on animals tracking them from birth to death. Additionally, we are able to have thousands of known mom-pup pairs in our database allowing us to measure maternal investment across years and generations. The goal of this study is to determine whether or not Northern Elephant seals exhibit terminal investment, or experience terminal effects where they have decreased reproductive success and chance of survival. Using the long-term data set as part of the UC Santa Cruz elephant seal program, we can look into factors such as weight, lactation duration, and offspring sex ratios as well to create an image of what may have been the reason the mom died in her last year. Northern Elephant seals begin reproducing around 3 years old and can produce a pup every year until death, under the right conditions. This allows us to look at some individuals that may have produced over 10 pups in their lifetime and see how their last pup was born compared to previous pups. 

We examined terminal investment by using data on the pup weight after being weaned, lactation duration, offspring sex ratios, and arrival times on the beach from mom. We predicted that if terminal investment was happening 1) lactation duration would be longer as a result of mom increasing her investment 2) the pup would be heavier in comparison to other pups, and 3) pup sex would have a higher chance of being male- given that it is the more costly sex to produce. Secondly, if terminal investment was exhibited, we examined whether or not it worked. If the mom did invest more in her last year of life and her pup survived the first year of life, this would mean terminal investment worked. We also propose that while senescence is recorded in NES (Payne 2024), terminal investment may be happening in their last year of life. We hypothesize that younger moms would experience terminal investment whereas older moms would experience terminal effects. Our study aims to help us understand how different maternal investment strategies may influence survival and reproductive success in long lived species. 

```{r}
#| label: setup
#Libraries: 
library(tidyverse)
library(dplyr)
library(ggplot2)
library(lme4)
library(cowplot)
library(car)
sealdat <- read_csv(here::here("data/Adrien Data Pull 2024_12_06.csv"))
cleanseal <- sealdat %>% filter(!is.na(animalID), !is.na(year), !is.na(observed), !is.na(tagsex), !is.na(firstobsbreed), !is.na(lastobsbreed), !is.na(calyear), !is.na(firstobsbreeddoy), !is.na(pupID), !is.na(pupsex), !is.na(yearborn), !is.na(age), !is.na(Wt)) #Clears out all the NA's from the sealdat set to have easier to understand data... less intimidating

#Calculating lactation duration, can i make this cleaner somehow? 
cleanseal$firstobsbreed <- as.Date(cleanseal$firstobsbreed, format = "%Y-%m-%d")
cleanseal$lastobsbreed <- as.Date(cleanseal$lastobsbreed, format = "%Y-%m-%d")
cleanseal$lactation_duration <- as.numeric(difftime(cleanseal$lastobsbreed, cleanseal$firstobsbreed, units = "days"))


```

Both males and females included in data, not sure if we will need males

```{r}
#Calculating Bio age
head(sealdat)
# sealdat$animalID

sealdat %>% filter(animalID == 170, observed == 1) %>% 
  mutate(age = year - yearborn, 
         max_age = max(age), 
         bio_age = max_age - age) %>% view()
#Bioage clean
bioseal <- sealdat %>% filter(observed == 1, tagsex == "F") %>%
  group_by(animalID) %>%
  mutate(age = year - yearborn, 
         max_age = max(age), 
         bio_age = max_age - age) %>%
  filter(age > 2)


#Calculate Lactation Duration
bioseal$firstobsbreed <- as.Date(bioseal$firstobsbreed, format = "%Y-%m-%d")
bioseal$lastobsbreed <- as.Date(bioseal$lastobsbreed, format = "%Y-%m-%d")
bioseal$lactation_duration <- as.numeric(difftime(bioseal$lastobsbreed, bioseal$firstobsbreed, units = "days"))



```

```{r}
lact_dat <- bioseal %>%
  filter(lactation_duration > 0) %>%
  select(animalID,
         bio_age,
         lactation_duration,
         year)

```

In some species terminal investment shows only in early years of reproduction, or during prime ages for breeding but often not in older ages due to senescence

New Idea:\
We want to create a threshold that has a prime age threshold in the figure. Ideally, it should show chronological age on the x axis and lactation duration on the y axis.

However, since we only were interested in looking at the last years of life to examine terminal investment we FILTERED out animals as bio_age \> 0. We still looked at chronological age to see how lactation duration changes in the last years of life among different age classes. We potentially will define animals as YOUNG OR OLD also to make it binomial.

POST MAX:

We will have :

L be lactation duration

A = chronological age

T = terminal (0 or 1 to create a yes no situation)

C = age category (young or old) we define young as ages 3-7 and old as 8+

In order to graph this we will look at L \~ Gamma(mean, sd)... mean = overall mean +coefficient for chronological age

```{r}
#First let's make a new data set for this graph called (well really just adding to the lact_dat data set already there... i went ahead and moved all that code below now. )
maturity <- 6
lact_dat <- bioseal %>% 
  filter(lactation_duration > 0 & lactation_duration < 45) %>% 
  select(animalID, bio_age, lactation_duration, year, pupsex, Wt, age) %>% 
  mutate(terminal = ifelse(bio_age == 0, 1, 0), 
         ageclass = ifelse(age <= maturity, "young", "old"),
         age10 = (age - maturity) / 10, 
         year_fct = factor(year))

# view(lact_dat)

  #So now we can...do stuff.. starting with Gamma vs negative binomial distribution 
#Negative Binomial model
lac_mod <- glmer.nb(
  lactation_duration ~ age10 + terminal:ageclass + (1 | year) ,
  data = lact_dat
)

summary(lac_mod)
summary(lac_mod)$coefficients

#Adrien points out that we need to be sure they are dead... 7 years like the Age paper
#creating prediction grid (so that we can use confidence intervals later)
lac_grid <- expand_grid(
  age = 3:22, 
  terminal = 0:1) %>% 
  mutate(age10 = (age - maturity) / 10, 
         ageclass = ifelse(age <= maturity, "young", "old"))

lac_years <- count(lact_dat, year_fct)

#create population predictions 
lac_pred_pop <- lac_grid %>% 
  mutate(predicted = predict(lac_mod, 
                             newdata = lac_grid, 
                             re.form = NA,
                             type = "response"),
         terminal_fct = factor(terminal, labels = c("Nonterminal", "Terminal")))

```

Trying to plot the predictions:

```{r}
# # Predictions vs Raw Data Plot
lact_summ <- lact_dat %>% 
  ungroup() %>% 
  mutate(terminal_fct = factor(terminal, labels = c("Nonterminal", "Terminal"))) %>% 
  group_by(age, terminal_fct, ageclass) %>% 
  summarize(mean_lact = mean(lactation_duration),
            se_lact = sd(lactation_duration) / sqrt(n()),
            .groups = "drop") %>% 
  mutate(age = age + 0.15 * ifelse(terminal_fct == "Terminal", 1, -1))


ggplot(lac_pred_pop, aes(x = age, y = predicted)) +
  geom_pointrange(aes(
    y = mean_lact, 
    ymin = mean_lact - 1.96 * se_lact, 
    ymax = mean_lact + 1.96 * se_lact, 
    linetype = terminal_fct,   
    color = ageclass
  ), lact_summ) +
  geom_line(aes(
    linetype = terminal_fct,    
    color = ageclass            
  ), linewidth = 1.2) + 
    geom_vline(xintercept = maturity + 0.5, linetype = "dashed", color = "#9B59B6") +  
  
  # Adjust the theme for aesthetic girl cute appearance
  theme_minimal() +
  theme(
    panel.background = element_rect(fill = "#F9F9F9"),
    axis.title.x = element_text(color = "#8E44AD", size = 14, face = "bold"),
    axis.title.y = element_text(color = "#8E44AD", size = 14, face = "bold"),
    axis.text.x = element_text(color = "#7F8C8D", size = 12),
    axis.text.y = element_text(color = "#7F8C8D", size = 12),
    plot.title = element_text(hjust = 0.5, size = 18, face = "italic", color = "#8E44AD")
  ) +
  labs(title = "Effect of Age on Lactation Duration", 
       x = "Mother's Age (Years)", 
       y = "Lactation Duration (days)") +
  
  # Custom color palette for lines and points
  scale_color_manual(values = c("#D5A6F6", "#66B2B2", "#9B59B6", "#6DD5B3")) +
  scale_fill_manual(values = c("#D5A6F6", "#66B2B2", "#9B59B6", "#6DD5B3"))
```

```{r}
library(segmented)
library(lmerTest)

#Wean Weight Time!
wt_dat <- bioseal %>%
  dplyr::select(animalID, bio_age, lactation_duration, year, pupsex, Wt, age) %>% 
  filter(!is.na(Wt))%>%
  mutate(terminal = ifelse(bio_age == 0, 1, 0), 
         ageclass = ifelse(age <= maturity, "young", "old"),
         age10 = (age - maturity) / 10, 
         year_fct = factor(year))

#Hist was evenly distributed: using glmer because of this:
wt_mod <- lmer(
  Wt ~ age10 + terminal:ageclass + (1 | year) + (1 | animalID), 
  data = wt_dat,
  )
summary(wt_mod)


#COME BACK TO:
# wt_mod_seg <- segmented(wt_mod, 
#                         seg.Z = ~ age10, 
#                         psi = (c(6,11) - maturity) / 10)

#IDEA, What if we create two datasets and plot them on the same graph of like one with a threshold at 6 and ends age 10, and then the other dataset consists of animals 11 and beyond and then it will automatically do that.. maybe we have to set two different threshold stuff too like maturity and then super mature. 


wt_grid <- expand_grid(
  age = 3:22, 
  terminal = 0:1) %>% 
  mutate(age10 = (age - maturity) / 10, 
         ageclass = ifelse(age <= maturity, "young", "old"))



#create population predictions 
wt_pred_pop <- wt_grid %>% 
  mutate(predicted = predict(wt_mod,  # Use the model object here
                             newdata = wt_grid, 
                             re.form = NA,    # If you're using glmer or similar
                             type = "response"),
         terminal_fct = factor(terminal, labels = c("Nonterminal", "Terminal")))

#Now summary?

wt_summ <- wt_dat %>% 
  ungroup() %>% 
  mutate(terminal_fct = factor(terminal, labels = c("Nonterminal", "Terminal"))) %>% 
  group_by(age, terminal_fct, ageclass) %>% 
  summarize(mean_wt = mean(Wt, na.rm = TRUE),  #should i remove Na value for weight? 
    se_wt = sd(Wt, na.rm = TRUE) / sqrt(n()),  
    .groups = "drop"
  ) %>% 
  mutate(age = age + 0.15 * ifelse(terminal_fct == "Terminal", 1, -1))

#Figure time! 
ggplot(wt_pred_pop, aes(x = age, y = predicted)) +
  geom_pointrange(aes(
    y = mean_wt, 
    ymin = mean_wt - 1.96 * se_wt, 
    ymax = mean_wt + 1.96 * se_wt, 
    linetype = terminal_fct,   
    color = ageclass
  ), wt_summ) +
  geom_line(aes(
    linetype = terminal_fct,    
    color = ageclass            
  ), linewidth = 1.2) +     
  geom_vline(xintercept = maturity + 0.5, linetype = "dashed", color = "#9B59B6") +  
  
  # Adjust the theme for aesthetic girl cute appearance
  theme_minimal() +
  theme(
    panel.background = element_rect(fill = "#F9F9F9"),
    axis.title.x = element_text(color = "#8E44AD", size = 14, face = "bold"),
    axis.title.y = element_text(color = "#8E44AD", size = 14, face = "bold"),
    axis.text.x = element_text(color = "#7F8C8D", size = 12),
    axis.text.y = element_text(color = "#7F8C8D", size = 12),
    plot.subtitle = element_text(hjust = 0.5, size = 12, color = "purple"),
    plot.title = element_text(hjust = 0.5, size = 18, face = "italic", color = "#8E44AD")
  ) +
  labs(title = "Impact of Age on Wean Weight", 
       subtitle = "Terminal vs Non-Terminal",
       x = "Mother's Age (Years)", 
       y = "Wean Weight(kg)") +
  
  # Custom color palette for lines and points
  scale_color_manual(values = c("#D5A6F6", "#66B2B2", "#9B59B6", "#6DD5B3")) +
  scale_fill_manual(values = c("#D5A6F6", "#66B2B2", "#9B59B6", "#6DD5B3"))






#Keeping this code here to show that some moms did produce super weans 
ggplot(wt_dat, aes(x = age, y = Wt)) +
  geom_point(aes(color = pupsex), alpha = 0.7, size = 4, shape = 16) +
  geom_smooth(method = "loess", se = TRUE, color = "#9B59B6", fill = "pink", alpha = 0.2, linetype = "solid") +
  
  labs(
    title = "Pup Weight at Weaning",
    subtitle = "Impacted by Mom's age",
    x = "Mom's Age (Years)",
    y = "Pup weight (kg)"
  ) +
  theme_minimal(base_size = 15) +
  theme(
    panel.grid.major = element_line(color = "pink", size = 0.3),  # Light grid lines
    panel.grid.minor = element_blank(),  # No minor grid lines
    axis.title.x = element_text(color = "#8E44AD", size = 14, face = "bold"),  # Purple title color
    axis.title.y = element_text(color = "#8E44AD", size = 14, face = "bold"),
    axis.text.x = element_text(color = "#7F8C8D", size = 12),  # Grey color for axis text
    axis.text.y = element_text(color = "#7F8C8D", size = 12),
    plot.title = element_text(hjust = 0.5, size = 18, face = "italic", color = "purple"),  # Purple title color
    plot.subtitle = element_text(hjust = 0.5, size = 12, color = "purple"),  # Subtle subtitle
    legend.title = element_text(size = 12, face = "bold", color = "purple"),
    legend.text = element_text(size = 12, color = "purple")
  ) +

  # Custom color scale for Pup Sex (assuming 'sex' is a variable in your data)
  scale_color_manual(values = c("#D5A6F6", "#66B2B2"))  # Soft pink and light blue


#Change this to a histogram figure!
```

```{r}
# #Just trying something here
# wt_dat$Wt <- round(wt_dat$Wt)
# 
# wt_mod_glmer <- glmer(
#   Wt ~ age10 + terminal:ageclass + (1 | year) + (1 | animalID),
#   data = wt_dat,
#   family = poisson(link = "log")  # For count data
# )
# summary(wt_mod_glmer)
# # 
# wt_grid2 <- expand_grid(
#   age = 3:22,
#   terminal = 0:1) %>%
#   mutate(age10 = (age - maturity) / 10,
#          ageclass = ifelse(age <= maturity, "young", "old"))
# 
# wt_pred_pop2 <- wt_grid %>%
#   mutate(predicted = predict(wt_mod,  # Use the model object here
#                              newdata = wt_grid,
#                              re.form = NA,    # If you're using glmer or similar
#                              type = "response"),
#          terminal_fct = factor(terminal, labels = c("Nonterminal", "Terminal")))
# 
# wt_summ2 <- wt_dat %>%
#   ungroup() %>%
#   mutate(terminal_fct = factor(terminal, labels = c("Nonterminal", "Terminal"))) %>%
#   group_by(age, terminal_fct, ageclass) %>%
#   summarize(mean_wt = mean(Wt, na.rm = TRUE),  #should i remove Na value for weight?
#     se_wt = sd(Wt, na.rm = TRUE) / sqrt(n()),
#     .groups = "drop"
#   ) %>%
#   mutate(age = age + 0.15 * ifelse(terminal_fct == "Terminal", 1, -1))
# 
# 
# #Figure:
# ggplot(wt_pred_pop2, aes(x = age, y = predicted)) +
#   geom_pointrange(aes(
#     y = mean_wt, 
#     ymin = mean_wt - 1.96 * se_wt, 
#     ymax = mean_wt + 1.96 * se_wt, 
#     linetype = terminal_fct,   
#     color = ageclass
#   ), wt_summ2) +
#   geom_line(aes(
#     linetype = terminal_fct,    
#     color = ageclass            
#   ), linewidth = 1.2) +     
#   geom_vline(xintercept = maturity + 0.5, linetype = "dashed", color = "#9B59B6") 
```

Now lets do offspring sex ratios: (below is just for the senior thesis class- may build off this)

```{r}

# # NICER LOOKING GRAPH 
# off_summ <- wt_dat %>%
#   group_by(age, pupsex) %>%
#   summarise(n = n(), .groups = "drop") %>%
#   mutate(prop = n / sum(n))  # Compute proportion for fill
# 
# off_summ$pupsex <- as.factor(off_summ$pupsex)
# 
# ggplot(data = off_summ, aes(x = age, y = prop)) + 
#   geom_col(aes(fill = pupsex), position = 'fill') +  # Set fill inside geom_col()
#   geom_hline(yintercept = 0.5, linetype = "dashed", color = "black") +
#   scale_x_continuous(breaks = 3:22) +
#   scale_y_continuous(labels = scales::percent_format(scale = 100)) +
#   labs(
#     title = "Sex Ratio of Offspring Linked to Age of Mother",
#     x = "Mother's Age (Years)",
#     y = "Sex Ratio (%)",
#     fill = "Pup Sex"
#   ) +
#   theme_minimal(base_size = 15) +
#   theme(
#     panel.grid.major = element_line(color = "pink", size = 0.3),  
#     panel.grid.minor = element_blank(),  
#     axis.title.x = element_text(color = "#8E44AD", size = 14, face = "bold"),  
#     axis.title.y = element_text(color = "#8E44AD", size = 14, face = "bold"),
#     axis.text.x = element_text(color = "#7F8C8D", size = 12),  
#     axis.text.y = element_text(color = "#7F8C8D", size = 12),
#     plot.title = element_text(hjust = 0.5, size = 18, face = "italic", color = "purple"),  
#     legend.title = element_text(size = 12, face = "bold", color = "purple"),
#     legend.text = element_text(size = 12, color = "purple")
#   ) +
#   scale_fill_manual(values = c("F" = "#D5A6F6", "M" = "#66B2B2"))  
```

I would like to have a nicer one though using glmer so lets try here!:

```{r}
# library(lme4)
# library(ggeffects)
# library(ggplot2)
# #Make New df
# ofsp_dat <- bioseal %>%
#   dplyr::select(animalID, bio_age, lactation_duration, year, pupsex, Wt, age) %>% 
#   filter(!is.na(Wt))%>%
#   mutate(terminal = ifelse(bio_age == 0, 1, 0), 
#          ageclass = ifelse(age <= maturity, "young", "old"),
#          age10 = (age - maturity) / 10, 
#          year_fct = factor(year),
#          pup_sex = ifelse(pupsex == "M", 1, 0))
# 
# #Calculations for creating our model - optimizer bobyqa didn't work 
# ofsp_mod <- glmer(pup_sex ~ age10 + terminal:ageclass + (1|animalID) + (1|year),
#                   data = ofsp_dat,
#                   family = binomial,
#                   control =  glmerControl(optimizer = "Nelder_Mead"))
# 
# summary(ofsp_mod)
# 
# #Creating predictions (pls work this keeps failing meee)
# ofsp_pred <- ggpredict(ofsp_mod, terms = c("age10 [3:22]", "terminal", "ageclass"))
# 
# 
# #Now lets summarize it:
# ofsp_summ <- ofsp_dat %>%
#   group_by(ageclass, terminal) %>%
#   summarise(
#     total = n(),
#     males = sum(pup_sex == 1),
#     male_prop = males / total,
#     se = sqrt((male_prop * (1 - male_prop)) / total),
#     .groups = "drop"
#   )
# 
# #Actual data points:
# obs_summary <- ofsp_dat %>% 
#   ungroup() %>%  # Remove any existing grouping from previous operations
#   mutate(terminal_fct = factor(terminal, labels = c("Non-terminal", "Terminal"))) %>%  # Convert terminal to factor
#   group_by(age, terminal_fct, ageclass) %>%  # Group by age, terminal status, and age class
#   summarize(
#     n = n(),  # Total number of observations
#     male_count = sum(pup_sex == 1),  # Number of male offspring (1 for male, 0 for female)
#     prop_male = male_count / n(),  # Proportion of male offspring
#     se = sqrt((prop_male * (1 - prop_male)) / n()),  # Standard error of the proportion
#     .groups = "drop"
#   ) %>% 
#   mutate(age = age + 0.15 * ifelse(terminal_fct == "Terminal", 1, -1))  # Adjust age 
# 
# 
# 
# #Figure:
# ggplot(ofsp_pred, aes(x = x, y = predicted)) +
#   geom_ribbon(aes(
#     ymin = conf.low, 
#     ymax = conf.high, 
#     fill = group
#   ), alpha = 0.2) +
#   geom_line(aes(
#     color = group, 
#     linetype = group
#   ), size = 1.2) +
#   geom_vline(xintercept = 7, linetype = "dashed", color = "#9B59B6") +  
#   # Theme and labels
#   theme_minimal() +
#   theme(
#     panel.background = element_rect(fill = "#F9F9F9", color = NA),
#     axis.title.x = element_text(color = "#8E44AD", size = 14, face = "bold"),
#     axis.title.y = element_text(color = "#8E44AD", size = 14, face = "bold"),
#     axis.text = element_text(color = "#7F8C8D", size = 12),
#     plot.title = element_text(hjust = 0.5, size = 18, face = "italic", color = "#8E44AD")
#   ) +
#   labs(
#     title = "Male Offspring Sex Ratio",
#     x = "Mother's Age (Years)",
#     y = "Predicted Probability of Male Offspring",
#     color = "Group",
#     fill = "Group",
#     linetype = "Group"
#   ) +
#   scale_color_manual(values = c("#D5A6F6", "#66B2B2", "#9B59B6", "#6DD5B3")) +
#   scale_fill_manual(values = c("#D5A6F6", "#66B2B2", "#9B59B6", "#6DD5B3"))
# 
# 
# #Figure if that actual obs_summary code works finally...
# ggplot(obs_summary, aes(x = age, y = prop_male)) +
#   # Pointrange for observed data (prop_male with SE)
#   geom_pointrange(aes(
#     y = prop_male,
#     ymin = prop_male - se,
#     ymax = prop_male + se,
#     color = terminal_fct,
#     linetype = terminal_fct
#   ), size = 1.2) +
#   
#   # Line for the predicted data (smooth line connecting points)
#   geom_line(aes(
#     color = terminal_fct,
#     linetype = terminal_fct
#   ), size = 1.2) +
#   
#   # Vertical line at maturity threshold (age = 7)
#   geom_vline(xintercept = 7, linetype = "dashed", color = "#9B59B6") +
#   
#   # Adjust theme for cleaner, more aesthetic look
#   theme_minimal() +
#   theme(
#     panel.background = element_rect(fill = "#F9F9F9", color = NA),
#     axis.title.x = element_text(color = "#8E44AD", size = 14, face = "bold"),
#     axis.title.y = element_text(color = "#8E44AD", size = 14, face = "bold"),
#     axis.text = element_text(color = "#7F8C8D", size = 12),
#     plot.title = element_text(hjust = 0.5, size = 18, face = "italic", color = "#8E44AD"),
#     legend.position = "top"
#   ) +
#   
#   # Title, axis labels, and custom legend titles
#   labs(
#     title = "Male Offspring Sex Ratio",
#     x = "Mother's Age (Years)",
#     y = "Proportion of Male Offspring",
#     color = "Terminal Status",
#     linetype = "Terminal Status"
#   ) +
#   
#   # Custom color and fill for the groups (Terminal vs Non-terminal)
#   scale_color_manual(values = c("Non-terminal" = "#66B2B2", "Terminal" = "#9B59B6")) +
#   scale_fill_manual(values = c("Non-terminal" = "#66B2B2", "Terminal" = "#9B59B6")) +
#   scale_linetype_manual(values = c("Non-terminal" = "solid", "Terminal" = "dashed"))
# 
# 
# 
# #Eh thats cool but im gonna do one more try: 
# # Combine the observed data points and predicted lines into one plot
# ggplot() +
#   # Plot the observed data points with confidence intervals
#   geom_pointrange(data = obs_summary, aes(
#     x = age, 
#     y = prop_male, 
#     ymin = prop_male - se, 
#     ymax = prop_male + se,
#     color = terminal_fct,
#     shape = terminal_fct
#   ), size = 1.2, show.legend = FALSE) + 
#   
#   # Plot the predicted values (lines) from the model
#   geom_line(data = ofsp_pred, aes(
#     x = x, 
#     y = predicted, 
#     color = group, 
#     linetype = group
#   ), size = 1.5) + 
#   
#   # vertical line at maturity threshold (age = 7)
#   geom_vline(xintercept = 7, linetype = "dashed", color = "#9B59B6") +
#   
#   # Adjust theme for aesthetic appearance
#   theme_minimal() +
#   theme(
#     panel.background = element_rect(fill = "#F9F9F9", color = NA),
#     axis.title.x = element_text(color = "#8E44AD", size = 14, face = "bold"),
#     axis.title.y = element_text(color = "#8E44AD", size = 14, face = "bold"),
#     axis.text = element_text(color = "#7F8C8D", size = 12),
#     plot.title = element_text(hjust = 0.5, size = 18, face = "italic", color = "#8E44AD"),
#     legend.position = "top"
#   ) +
#   
#   # Title, axis labels, and custom legend titles
#   labs(
#     title = "Male Offspring Sex Ratio",
#     x = "Mother's Age (Years)",
#     y = "Proportion of Male Offspring",
#     color = "Terminal Status",
#     linetype = "Terminal Status",
#     shape = "Terminal Status"
#   ) +
#   
#   # My cute custom color palette for Terminal vs Non-terminal groups
#   scale_color_manual(values = c("Non-terminal" = "#66B2B2", "Terminal" = "#9B59B6")) +
#   scale_fill_manual(values = c("Non-terminal" = "#66B2B2", "Terminal" = "#9B59B6")) +
#   scale_linetype_manual(values = c("Non-terminal" = "solid", "Terminal" = "dashed")) +
#   
# #For axis breaks 
#   scale_x_continuous(breaks = seq(3, 22, 1)) +
#   scale_y_continuous(labels = scales::percent)
# 
# 
# 
# 
# 

```

Just a plot to have full sample size:

```{r}
pop_breed <- bioseal %>% 
  group_by(age) %>% 
  count(age) %>% 
  ggplot(aes(x = age, y = n,)) + 
   geom_col(fill = "#66B2B2")  +
  labs(x = "Age", y = "Number of Individuals")+ 
  theme_minimal(base_size = 15) +
  theme(
    panel.grid.major = element_line(color = "pink", size = 0.3),  
    panel.grid.minor = element_blank(),  
    axis.title.x = element_text(color = "#8E44AD", size = 14, face = "bold"),  
    axis.title.y = element_text(color = "#8E44AD", size = 14, face = "bold"),
    axis.text.x = element_text(color = "#7F8C8D", size = 12),  
    axis.text.y = element_text(color = "#7F8C8D", size = 12),
    plot.title = element_text(hjust = 0.5, size = 18, face = "italic", color = "purple"),  
    legend.title = element_text(size = 12, face = "bold", color = "purple"),
    legend.text = element_text(size = 12, color = "purple")
  ) +
  scale_fill_manual(values = c("F" = "#D5A6F6", "M" = "#66B2B2"))  


```

```{r}
#We gon try one last GREAT attempt: 
sex_dat <- bioseal %>%
  dplyr::select(animalID, bio_age, pupsex, age, year) %>% 
  filter(!is.na(pupsex)) %>%
  mutate(
    is_male = ifelse(pupsex == "M", 1, 0),  # 1 = male, 0 = female
    terminal = ifelse(bio_age == 0, 1, 0), 
    ageclass = ifelse(age <= maturity, "young", "old"),
    age10 = (age - maturity) / 10, 
    year_fct = factor(year)
  )


#Run our model: 
sex_mod <- glmer(
  is_male ~ age10 + terminal:ageclass + (1 | year_fct) + (1 | animalID),
  family = binomial,
  data = sex_dat
)
summary(sex_mod)

#Now the grid ofc (this is what I forgot for previous lines)
sex_grid <- expand_grid(
  age = 3:22, 
  terminal = 0:1
) %>% 
  mutate(
    age10 = (age - maturity) / 10, 
    ageclass = ifelse(age <= maturity, "young", "old")
  )


#Better predicted values:
sex_pred_pop <- sex_grid %>%
  mutate(
    predicted_prob_male = predict(
      sex_mod, 
      newdata = sex_grid, 
      re.form = NA, 
      type = "response"
    ),
    terminal_fct = factor(terminal, labels = c("Nonterminal", "Terminal"))
  )

#Now summarize all this GOOD data
sex_summ <- sex_dat %>%
  ungroup() %>%
  mutate(terminal_fct = factor(terminal, labels = c("Nonterminal", "Terminal"))) %>%
  group_by(age, terminal_fct, ageclass) %>%
  summarize(
    prop_male = mean(is_male, na.rm = TRUE),
    se_prop = sqrt((prop_male * (1 - prop_male)) / n()), 
    .groups = "drop"
  ) %>%
  mutate(age = age + 0.15 * ifelse(terminal_fct == "Terminal", 1, -1))


#And... magic plot?!??!
ggplot(sex_pred_pop, aes(x = age, y = predicted_prob_male)) +
  geom_pointrange(aes(
    y = prop_male, 
    ymin = prop_male - 1.96 * se_prop, 
    ymax = prop_male + 1.96 * se_prop, 
    linetype = terminal_fct,   
    color = ageclass
  ), sex_summ) +
  geom_line(aes(
    linetype = terminal_fct,    
    color = ageclass            
  ), linewidth = 1.2) +     
  geom_vline(xintercept = maturity + 0.5, linetype = "dashed", color = "#9B59B6") +  
  
  theme_minimal() +
  theme(
    panel.background = element_rect(fill = "#F9F9F9"),
    axis.title.x = element_text(color = "#8E44AD", size = 14, face = "bold"),
    axis.title.y = element_text(color = "#8E44AD", size = 14, face = "bold"),
    axis.text.x = element_text(color = "#7F8C8D", size = 12),
    axis.text.y = element_text(color = "#7F8C8D", size = 12),
    plot.subtitle = element_text(hjust = 0.5, size = 12, color = "purple"),
    plot.title = element_text(hjust = 0.5, size = 18, face = "italic", color = "#8E44AD")
  ) +
  labs(
    title = "Offspring Sex Ratio by Maternal Age", 
    subtitle = "Terminal vs Non-Terminal Mothers",
    x = "Mother's Age (Years)", 
    y = "Probability Offspring is Male"
  ) +
  scale_color_manual(values = c("#D5A6F6", "#66B2B2", "#9B59B6", "#6DD5B3")) +
  scale_fill_manual(values = c("#D5A6F6", "#66B2B2", "#9B59B6", "#6DD5B3"))


#YIPPIEE 


```
