---
title: "Studying Terminal Effects in Northern Elephant Seals"
format:
  html:
    echo: false
    fig-width: 7
    fig-height: 5
    code-fold: true
    code-tools: true
    warning: false
    toc: true
editor: visual
---

#Introduction

\tex length(unique(bioseal\$year))

#Downloading the Data

```{r}
#| label: setup
#Libraries: 
library(tidyverse)
library(dplyr)
library(ggplot2)
library(lme4)
library(cowplot)
library(car)
sealdat <- read_csv(here::here("data/Adrien Data Pull 2024_12_06.csv"))
cleanseal <- sealdat %>% filter(!is.na(animalID), !is.na(year), !is.na(observed), !is.na(tagsex), !is.na(firstobsbreed), !is.na(lastobsbreed), !is.na(calyear), !is.na(firstobsbreeddoy), !is.na(pupID), !is.na(pupsex), !is.na(yearborn), !is.na(age), !is.na(Wt)) #Clears out all the NA's from the sealdat set to have easier to understand data... less intimidating

#Calculating lactation duration, can i make this cleaner somehow? 
cleanseal$firstobsbreed <- as.Date(cleanseal$firstobsbreed, format = "%Y-%m-%d")
cleanseal$lastobsbreed <- as.Date(cleanseal$lastobsbreed, format = "%Y-%m-%d")
cleanseal$lactation_duration <- as.numeric(difftime(cleanseal$lastobsbreed, cleanseal$firstobsbreed, units = "days"))


```

#Modified data:

```{r}
#Calculating Bio age
head(sealdat)
# sealdat$animalID

sealdat %>% filter(animalID == 170, observed == 1) %>% 
  mutate(age = year - yearborn, 
         max_age = max(age), 
         bio_age = max_age - age) %>% view()
#Bioage clean
bioseal <- sealdat %>% filter(observed == 1, tagsex == "F") %>%
  group_by(animalID) %>%
  mutate(age = year - yearborn, 
         max_age = max(age), 
         bio_age = max_age - age) %>%
  filter(age > 2)


#Calculate Lactation Duration
bioseal$firstobsbreed <- as.Date(bioseal$firstobsbreed, format = "%Y-%m-%d")
bioseal$lastobsbreed <- as.Date(bioseal$lastobsbreed, format = "%Y-%m-%d")
bioseal$lactation_duration <- as.numeric(difftime(bioseal$lastobsbreed, bioseal$firstobsbreed, units = "days"))



```

#Adult female population fig:

```{r}
pop_breed <- bioseal %>% 
  group_by(age) %>% 
  count(age) %>% 
  ggplot(aes(x = age, y = n,)) + 
   geom_col(fill = "#6DD5B3")  +
  labs(x = "Age", y = "Number of Individuals")+ 
  theme_minimal(base_size = 15) +
  theme(
    panel.grid.major = element_line(color = "pink", size = 0.3),  
    panel.grid.minor = element_blank(),  
    axis.title.x = element_text(color = "#8E44AD", size = 14, face = "bold"),  
    axis.title.y = element_text(color = "#8E44AD", size = 14, face = "bold"),
    axis.text.x = element_text(color = "#7F8C8D", size = 12),  
    axis.text.y = element_text(color = "#7F8C8D", size = 12),
    plot.title = element_text(hjust = 0.5, size = 18, face = "italic", color = "purple"),  
    legend.title = element_text(size = 12, face = "bold", color = "purple"),
    legend.text = element_text(size = 12, color = "purple")
  ) +
  scale_fill_manual(values = c("F" = "#D5A6F6", "M" = "#6DD5B3"))  

print(pop_breed)
```

#Lactation Duration data set

```{r}
lact_dat <- bioseal %>%
  filter(lactation_duration > 0) %>%
  select(animalID,
         bio_age,
         lactation_duration,
         year)

```

In some species terminal investment shows only in early years of reproduction, or during prime ages for breeding but often not in older ages due to senescence

New Idea:\
We want to create a threshold that has a prime age threshold in the figure. Ideally, it should show chronological age on the x axis and lactation duration on the y axis.

However, since we only were interested in looking at the last years of life to examine terminal investment we FILTERED out animals as bio_age \> 0. We still looked at chronological age to see how lactation duration changes in the last years of life among different age classes. We potentially will define animals as YOUNG OR OLD also to make it binomial.

POST MAX:

We will have :

L be lactation duration

A = chronological age

T = terminal (0 or 1 to create a yes no situation)

C = age category (young or old) we define young as ages 3-7 and old as 8+

In order to graph this we will look at L \~ Gamma(mean, sd)... mean = overall mean +coefficient for chronological age

```{r}
#First let's modify our data set for this graph 
maturity <- 6
lact_dat <- bioseal %>% 
  filter(lactation_duration > 0 & lactation_duration < 45) %>% 
  select(animalID, bio_age, lactation_duration, year, pupsex, Wt, age) %>% 
  mutate(terminal = ifelse(bio_age == 0, 1, 0), 
         ageclass = ifelse(age <= maturity, "inexperienced", "experienced"),
         age10 = (age - maturity) / 10, 
         year_fct = factor(year))

#So now we can...do stuff.. starting with Gamma vs negative binomial distribution 
#Negative Binomial model
lac_mod <- glmer.nb(
  lactation_duration ~ age10 + terminal:ageclass + (1 | year) ,
  data = lact_dat
)

summary(lac_mod)
summary(lac_mod)$coefficients


#creating prediction grid (so that we can use confidence intervals later)
lac_grid <- expand_grid(
  age = 3:22, 
  terminal = 0:1) %>% 
  mutate(age10 = (age - maturity) / 10, 
         ageclass = ifelse(age <= maturity, "inexperienced", "experienced"))


lac_years <- count(lact_dat, year_fct)

#create population predictions 
lac_pred_pop <- lac_grid %>% 
  mutate(predicted = predict(lac_mod, 
                             newdata = lac_grid, 
                             re.form = NA,
                             type = "response"),
         terminal_fct = factor(terminal, labels = c("Nonterminal", "Terminal")))

```

#Lactation Duration fig:

```{r}
# # Predictions vs Raw Data Plot
lact_summ <- lact_dat %>% 
  ungroup() %>% 
  mutate(terminal_fct = factor(terminal, labels = c("Nonterminal", "Terminal"))) %>% 
  group_by(age, terminal_fct, ageclass) %>% 
  summarize(mean_lact = mean(lactation_duration),
            se_lact = sd(lactation_duration) / sqrt(n()),
            .groups = "drop") %>% 
  mutate(age = age + 0.15 * ifelse(terminal_fct == "Terminal", 1, -1))


lac_plot <- ggplot(lac_pred_pop, aes(x = age, y = predicted)) +
  geom_pointrange(aes(
    y = mean_lact, 
    ymin = mean_lact - 1.96 * se_lact, 
    ymax = mean_lact + 1.96 * se_lact, 
    linetype = terminal_fct,   
    color = ageclass
  ), lact_summ) +
  geom_line(aes(
    linetype = terminal_fct,    
    color = ageclass            
  ), linewidth = 1.2) + 
    geom_vline(xintercept = maturity + 0.5, linetype = "dashed", color = "#9B59B6") +  
  
  # Adjust the theme for aesthetic girl cute appearance
  theme_minimal() +
  theme(
    panel.background = element_rect(fill = "#F9F9F9"),
    axis.title.x = element_text(color = "#8E44AD", size = 14, face = "bold"),
    axis.title.y = element_text(color = "#8E44AD", size = 14, face = "bold"),
    axis.text.x = element_text(color = "#7F8C8D", size = 12),
    axis.text.y = element_text(color = "#7F8C8D", size = 12),
    plot.title = element_text(hjust = 0.5, size = 18, face = "italic", color = "#8E44AD")
  ) +
  labs(title = "Effect of Age on Lactation Duration", 
       x = "Mother's Age (Years)", 
       y = "Lactation Duration (days)") +
  
  # Custom color palette for lines and points
  scale_color_manual(values = c("#D5A6F6", "#6DD5B3", "#9B59B6", "#66B2B2")) +
  scale_fill_manual(values = c("#D5A6F6", "#6DD5B3", "#9B59B6", "#66B2B2"))

print(lac_plot)
```

#Wean Weight fig:

```{r}
library(segmented)
library(lmerTest)

#Wean Weight Time!
wt_dat <- bioseal %>%
  dplyr::select(animalID, bio_age, lactation_duration, year, pupsex, Wt, age) %>% 
  filter(!is.na(Wt))%>%
  mutate(terminal = ifelse(bio_age == 0, 1, 0), 
         ageclass = ifelse(age <= maturity, "inexperienced", "experienced"),
         age10 = (age - maturity) / 10, 
         year_fct = factor(year))

#Hist was evenly distributed: using glmer because of this:
wt_mod <- lmer(
  Wt ~ age10 + terminal:ageclass + (1 | year) + (1 | animalID), 
  data = wt_dat,
  )
summary(wt_mod)

#Create our grid for prediction metrics 
wt_grid <- expand_grid(
  age = 3:22, 
  terminal = 0:1) %>% 
  mutate(age10 = (age - maturity) / 10, 
         ageclass = ifelse(age <= maturity, "inexperienced", "experienced"))



#create population predictions 
wt_pred_pop <- wt_grid %>% 
  mutate(predicted = predict(wt_mod,  # Use the model object here
                             newdata = wt_grid, 
                             re.form = NA,    # If you're using glmer or similar
                             type = "response"),
         terminal_fct = factor(terminal, labels = c("Nonterminal", "Terminal")))

#Now summary

wt_summ <- wt_dat %>% 
  ungroup() %>% 
  mutate(terminal_fct = factor(terminal, labels = c("Nonterminal", "Terminal"))) %>% 
  group_by(age, terminal_fct, ageclass) %>% 
  summarize(mean_wt = mean(Wt, na.rm = TRUE),  #should i remove Na value for weight? 
    se_wt = sd(Wt, na.rm = TRUE) / sqrt(n()),  
    .groups = "drop"
  ) %>% 
  mutate(age = age + 0.15 * ifelse(terminal_fct == "Terminal", 1, -1))

#Figure time! 
ggplot(wt_pred_pop, aes(x = age, y = predicted)) +
  geom_pointrange(aes(
    y = mean_wt, 
    ymin = mean_wt - 1.96 * se_wt, 
    ymax = mean_wt + 1.96 * se_wt, 
    linetype = terminal_fct,   
    color = ageclass
  ), wt_summ) +
  geom_line(aes(
    linetype = terminal_fct,    
    color = ageclass            
  ), linewidth = 1.2) +     
  geom_vline(xintercept = maturity + 0.5, linetype = "dashed", color = "#9B59B6") +  
  
  # Adjust the theme for aesthetic girl cute appearance
  theme_minimal() +
  theme(
    panel.background = element_rect(fill = "#F9F9F9"),
    axis.title.x = element_text(color = "#8E44AD", size = 14, face = "bold"),
    axis.title.y = element_text(color = "#8E44AD", size = 14, face = "bold"),
    axis.text.x = element_text(color = "#7F8C8D", size = 12),
    axis.text.y = element_text(color = "#7F8C8D", size = 12),
    plot.subtitle = element_text(hjust = 0.5, size = 12, color = "purple"),
    plot.title = element_text(hjust = 0.5, size = 18, face = "italic", color = "#8E44AD")
  ) +
  labs(title = "Impact of Age on Wean Weight", 
       subtitle = "Terminal vs Non-Terminal",
       x = "Mother's Age (Years)", 
       y = "Wean Weight(kg)") +
  
  # Custom color palette for lines and points
  scale_color_manual(values = c("#D5A6F6", "#6DD5B3", "#9B59B6", "#66B2B2")) +
  scale_fill_manual(values = c("#D5A6F6", "#6DD5B3", "#9B59B6", "#66B2B2"))






#Keeping this code here to show that some moms did produce super weans 
ggplot(wt_dat, aes(x = age, y = Wt)) +
  geom_point(aes(color = pupsex), alpha = 0.7, size = 4, shape = 16) +
  geom_smooth(method = "loess", se = TRUE, color = "#9B59B6", fill = "pink", alpha = 0.2, linetype = "solid") +
  
  labs(
    title = "Pup Weight at Weaning",
    subtitle = "Impacted by Mom's age",
    x = "Mom's Age (Years)",
    y = "Pup weight (kg)"
  ) +
  theme_minimal(base_size = 15) +
  theme(
    panel.grid.major = element_line(color = "pink", size = 0.3),  
    panel.grid.minor = element_blank(),  
    axis.title.x = element_text(color = "#8E44AD", size = 14, face = "bold"),  # Purple title color
    axis.title.y = element_text(color = "#8E44AD", size = 14, face = "bold"),
    axis.text.x = element_text(color = "#7F8C8D", size = 12),  
    axis.text.y = element_text(color = "#7F8C8D", size = 12),
    plot.title = element_text(hjust = 0.5, size = 18, face = "italic", color = "purple"),  
    plot.subtitle = element_text(hjust = 0.5, size = 12, color = "purple"),  
    legend.title = element_text(size = 12, face = "bold", color = "purple"),
    legend.text = element_text(size = 12, color = "purple")
  ) +
  scale_color_manual(values = c("#D5A6F6", "#6DD5B3"))  

```

#Wean Weight 2:

Were going to attempt trying to create a new wean weight dataset to incorporate three breakpoints:

```{r}
#First.. lets change the dataset so we have 3 ageclasses: 
wt_dat <- wt_dat %>%
  mutate(
    terminal = ifelse(bio_age == 0, 1, 0), 
    ageclass3 = case_when(
      age >= 3 & age <= 6 ~ "inexperienced",
      age >= 7 & age <= 13 ~ "prime",
      age >= 14 ~ "experienced",
      TRUE ~ NA_character_
    ),
    ageclass3 = factor(ageclass3, levels = c("inexperienced", "prime", "experienced")),
    age10 = (age - maturity) / 10, 
    year_fct = factor(year)
  )

#New model/updated:
wt_mod <- lmer(
  Wt ~ age10 + terminal:ageclass3 + (1 | year) + (1 | animalID), 
  data = wt_dat,
  )
summary(wt_mod)


#Then recreate our grid with all three age classes: 
wt_grid <- expand_grid(
  age = 3:22, 
  terminal = 0:1
) %>%
  mutate(
    age10 = (age - maturity) / 10,
    ageclass3 = case_when(
      age >= 3 & age <= 6 ~ "inexperienced",
      age >= 7 & age <= 13 ~ "prime",
      age >= 14 ~ "experienced"
    ),
    ageclass3 = factor(ageclass3, levels = c("inexperienced", "prime", "experienced"))
  )

#Update predictions:
wt_pred_pop <- wt_grid %>% 
  mutate(predicted = predict(wt_mod,  
                             newdata = wt_grid, 
                             re.form = NA,    
                             type = "response"),
         terminal_fct = factor(terminal, labels = c("Nonterminal", "Terminal")))

#Now summary:
wt_summ <- wt_dat %>% 
  ungroup() %>% 
  mutate(
    terminal_fct = factor(terminal, labels = c("Nonterminal", "Terminal"))
  ) %>% 
  group_by(age, terminal_fct, ageclass3) %>% 
  summarize(
    mean_wt = mean(Wt, na.rm = TRUE),
    se_wt = sd(Wt, na.rm = TRUE) / sqrt(n()),
    .groups = "drop"
  ) %>% 
  mutate(age = age + 0.15 * ifelse(terminal_fct == "Terminal", 1, -1))


#And figure:??
wt_fig <- ggplot(wt_pred_pop, aes(x = age, y = predicted)) +
  
  # Error bars and points from summary
  geom_pointrange(aes(
    y = mean_wt,
    ymin = mean_wt - 1.96 * se_wt,
    ymax = mean_wt + 1.96 * se_wt,
    linetype = terminal_fct,
    color = ageclass3
  ), data = wt_summ) +
  
  # Model prediction lines
  geom_line(aes(
    linetype = terminal_fct,
    color = ageclass3
  ), linewidth = 1.2) +
  
  # Vertical lines at maturity (age 6) and new threshold (age 11)
  geom_vline(xintercept = maturity + 0.5, linetype = "dashed", color = "#9B59B6") +  # Maturity
  geom_vline(xintercept = 14, linetype = "dashed", color = "#9B59B6") +  # New threshold
  
  # Theme and aesthetic styling
  theme_minimal() +
  theme(
    panel.background = element_rect(fill = "#F9F9F9"),
    axis.title.x = element_text(color = "#8E44AD", size = 14, face = "bold"),
    axis.title.y = element_text(color = "#8E44AD", size = 14, face = "bold"),
    axis.text.x = element_text(color = "#7F8C8D", size = 12),
    axis.text.y = element_text(color = "#7F8C8D", size = 12),
    plot.subtitle = element_text(hjust = 0.5, size = 12, color = "purple"),
    plot.title = element_text(hjust = 0.5, size = 18, face = "italic", color = "#8E44AD")
  ) +
  
  # Labels
  labs(
    title = "Impact of Age on Wean Weight",
    subtitle = "Terminal vs Non-Terminal Mothers",
    x = "Mother's Age (Years)",
    y = "Wean Weight (kg)",
    color = "Age Class",
    linetype = "Terminal Status"
  ) +

  # Color palette
  scale_color_manual(values = c(
    "inexperienced" = "#6DD5B3",
    "prime" = "#9B59B6",
    "experienced" = "#D5A6F6"
  ))

print(wt_fig)
```

#Sex Ratios fig:

We hypothesize that young terminal moms will have a higher chance of giving birth to a male offspring sex ratio than non terminal moms. Whereas old terminal moms will produce less males compared to non terminal moms

```{r}
#We gon try one last GREAT attempt: 
sex_dat <- bioseal %>%
  dplyr::select(animalID, bio_age, pupsex, age, year) %>% 
  filter(!is.na(pupsex)) %>%
  mutate(
    is_male = ifelse(pupsex == "M", 1, 0),  # 1 = male, 0 = female
    terminal = ifelse(bio_age == 0, 1, 0), 
    ageclass = ifelse(age <= maturity, "inexperienced", "experienced"),
    age10 = (age - maturity) / 10, 
    year_fct = factor(year)
  )


#Run our model: 
sex_mod <- glmer(
  is_male ~ age10 + terminal:ageclass + (1 | year_fct) + (1 | animalID),
  family = binomial,
  data = sex_dat
)
summary(sex_mod)

#Now the grid ofc (this is what I forgot for previous lines)
sex_grid <- expand_grid(
  age = 3:22, 
  terminal = 0:1
) %>% 
  mutate(
    age10 = (age - maturity) / 10, 
    ageclass = ifelse(age <= maturity, "inexperienced", "experienced")
  )


#Better predicted values:
sex_pred_pop <- sex_grid %>%
  mutate(
    predicted_prob_male = predict(
      sex_mod, 
      newdata = sex_grid, 
      re.form = NA, 
      type = "response"
    ),
    terminal_fct = factor(terminal, labels = c("Nonterminal", "Terminal"))
  )

#Now summarize all this GOOD data
sex_summ <- sex_dat %>%
  ungroup() %>%
  mutate(terminal_fct = factor(terminal, labels = c("Nonterminal", "Terminal"))) %>%
  group_by(age, terminal_fct, ageclass) %>%
  summarize(
    prop_male = mean(is_male, na.rm = TRUE),
    se_prop = sqrt((prop_male * (1 - prop_male)) / n()), 
    .groups = "drop"
  ) %>%
  mutate(age = age + 0.15 * ifelse(terminal_fct == "Terminal", 1, -1))


#And... magic plot?!??!
ggplot(sex_pred_pop, aes(x = age, y = predicted_prob_male)) +
  geom_pointrange(aes(
    y = prop_male, 
    ymin = prop_male - 1.96 * se_prop, 
    ymax = prop_male + 1.96 * se_prop, 
    linetype = terminal_fct,   
    color = ageclass
  ), sex_summ) +
  geom_line(aes(
    linetype = terminal_fct,    
    color = ageclass            
  ), linewidth = 1.2) +     
  geom_vline(xintercept = maturity + 0.5, linetype = "dashed", color = "#9B59B6") +  
  
  theme_minimal() +
  theme(
    panel.background = element_rect(fill = "#F9F9F9"),
    axis.title.x = element_text(color = "#8E44AD", size = 14, face = "bold"),
    axis.title.y = element_text(color = "#8E44AD", size = 14, face = "bold"),
    axis.text.x = element_text(color = "#7F8C8D", size = 12),
    axis.text.y = element_text(color = "#7F8C8D", size = 12),
    plot.subtitle = element_text(hjust = 0.5, size = 12, color = "purple"),
    plot.title = element_text(hjust = 0.5, size = 18, face = "italic", color = "#8E44AD")
  ) +
  labs(
    title = "Offspring Sex Ratio by Maternal Age", 
    subtitle = "Terminal vs Non-Terminal Mothers",
    x = "Mother's Age (Years)", 
    y = "Probability Offspring is Male"
  ) +
  scale_color_manual(values = c("#D5A6F6", "#6DD5B3", "#9B59B6", "#66B2B2")) +
  scale_fill_manual(values = c("#D5A6F6", "#6DD5B3", "#9B59B6", "#66B2B2"))


#YIPPIEE 


```

Now I'm just going to change it all to 3 classes to see how that changes things..

```{r}
#First lets's start with the offspring sex ratio 3 classes part: 
#We gon try one last GREAT attempt: 
sex_dat2 <- bioseal %>%
  dplyr::select(animalID, bio_age, pupsex, age, year) %>% 
  filter(!is.na(pupsex)) %>%
  mutate(
    is_male = ifelse(pupsex == "M", 1, 0),  # 1 = male, 0 = female
    terminal = ifelse(bio_age == 0, 1, 0), 
    ageclass3 = case_when(
      age >= 3 & age <= 6 ~ "inexperienced",
      age >= 7 & age <= 13 ~ "prime",
      age >= 14 ~ "experienced",
      TRUE ~ NA_character_
    ),
    ageclass3 = factor(ageclass3, levels = c("inexperienced", "prime", "experienced")),
    age10 = (age - maturity) / 10, 
    year_fct = factor(year)
  )


#Run our model: 
sex_mod2 <- glmer(
  is_male ~ age10 + terminal:ageclass3 + (1 | year_fct) + (1 | animalID),
  family = binomial,
  data = sex_dat2
)
summary(sex_mod2)

#Now the grid ofc (this is what I forgot for previous lines)
sex_grid2 <- expand_grid(
  age = 3:22, 
  terminal = 0:1
) %>% 
  mutate(
    age10 = (age - maturity) / 10, 
    ageclass3 = case_when(
      age >= 3 & age <= 6 ~ "inexperienced",
      age >= 7 & age <= 13 ~ "prime",
      age >= 14 ~ "experienced"
    ),
    ageclass3 = factor(ageclass3, levels = c("inexperienced", "prime", "experienced"))
  )


#Better predicted values:
sex_pred_pop2 <- sex_grid2 %>%
  mutate(
    predicted_prob_male = predict(
      sex_mod2, 
      newdata = sex_grid2, 
      re.form = NA, 
      type = "response"
    ),
    terminal_fct = factor(terminal, labels = c("Nonterminal", "Terminal"))
  )

#Now summarize all this GOOD data
sex_summ2 <- sex_dat2 %>%
  ungroup() %>%
  mutate(terminal_fct = factor(terminal, labels = c("Nonterminal", "Terminal"))) %>%
  group_by(age, terminal_fct, ageclass3) %>%
  summarize(
    prop_male = mean(is_male, na.rm = TRUE),
    se_prop = sqrt((prop_male * (1 - prop_male)) / n()), 
    .groups = "drop"
  ) %>%
  mutate(age = age + 0.15 * ifelse(terminal_fct == "Terminal", 1, -1))


#And... magic plot?!??!
ggplot(sex_pred_pop2, aes(x = age, y = predicted_prob_male)) +
  geom_pointrange(aes(
    y = prop_male, 
    ymin = prop_male - 1.96 * se_prop, 
    ymax = prop_male + 1.96 * se_prop, 
    linetype = terminal_fct,   
    color = ageclass3
  ), sex_summ2) +
  geom_line(aes(
    linetype = terminal_fct,    
    color = ageclass3            
  ), linewidth = 1.2) +     
  geom_vline(xintercept = maturity + 0.5, linetype = "dashed", color = "#9B59B6") +  
  geom_vline(xintercept = 14, linetype = "dashed", color = "#9B59B6") +
  
  theme_minimal() +
  theme(
    panel.background = element_rect(fill = "#F9F9F9"),
    axis.title.x = element_text(color = "#8E44AD", size = 14, face = "bold"),
    axis.title.y = element_text(color = "#8E44AD", size = 14, face = "bold"),
    axis.text.x = element_text(color = "#7F8C8D", size = 12),
    axis.text.y = element_text(color = "#7F8C8D", size = 12),
    plot.subtitle = element_text(hjust = 0.5, size = 12, color = "purple"),
    plot.title = element_text(hjust = 0.5, size = 18, face = "italic", color = "#8E44AD")
  ) +
  labs(
    title = "Offspring Sex Ratio by Maternal Age", 
    subtitle = "Terminal vs Non-Terminal Mothers",
    x = "Mother's Age (Years)", 
    y = "Probability Offspring is Male"
  ) +
  scale_color_manual(values = c("#D5A6F6", "#6DD5B3", "#9B59B6", "#66B2B2")) +
  scale_fill_manual(values = c("#D5A6F6", "#6DD5B3", "#9B59B6", "#66B2B2"))

#didn't seem significant sooo onto the next iggg 
```

Ok.. now heres the BIG cool challenge I want to take on next..

Did offspring of terminal moms have higher chance of survival???

```{r}
#I think i have to reuse sealdat.. havent touched this dat set in a MINNNN.. so lets modify her a lil


#This aint work


# Clean and mutate the data
surv_seal <- cleanseal %>%
  group_by(animalID) %>%
  mutate(age = year - yearborn,
         max_age = max(age, na.rm = TRUE),
         bio_age = max_age - age) %>%
  ungroup()

#Then apply select
surv_dat <- surv_seal %>%
  dplyr::select(animalID, pupID, bio_age, year, pupsex, age) %>%  
  filter(!is.na(pupsex)) %>%  
  mutate(
    is_survive = as.integer(pupID %in% animalID), 
    terminal = ifelse(bio_age == 0, 1, 0),  
    ageclass = case_when(
      age <= maturity ~ "young",
      age > maturity ~ "old",
      TRUE ~ NA_character_
    ),
    ageclass = factor(ageclass, levels = c("young", "old")),  
    age10 = (age - maturity) / 10,  
    year_fct = factor(year)  
  )

#Lets buff up our data maybe..
surv_dat_balanced <- surv_dat %>%
  bind_rows(surv_dat %>% filter(is_survive == 1) %>% sample_n(1472 - 55, replace = TRUE))  # Upsample the survived pups

surv_dat_balanced <- surv_dat %>%
  mutate(weight = ifelse(is_survive == 1, 1472 / 55, 1))


# Model using glmer
surv_mod <- glmer(
  is_survive ~ age10 + terminal:ageclass + (1 | year) + (1 | animalID),
  family = binomial,
  data = surv_dat_balanced,
  weights = weight,
  control = glmerControl(optimizer = "bobyqa", optCtrl = list(maxfun = 5e5))
)
summary(surv_mod)

# Create a grid of age and terminal status combinations
surv_grid <- expand_grid(
  age = 3:22,  
  terminal = 0:1  
) %>%
  mutate(
    age10 = (age - maturity) / 10,  
    ageclass = ifelse(age <= maturity, "young", "old")  
  )

# Generate predictions using the weighted model
surv_pred_pop <- surv_grid %>%
  mutate(
    predicted_prob_survival = predict(
      surv_mod, 
      newdata = surv_grid, 
      re.form = NA,  
      type = "response"
    ),
    terminal_fct = factor(terminal, labels = c("Nonterminal", "Terminal"))
  )

#Summarize all this ^^
surv_summ <- surv_dat_balanced %>%
  ungroup() %>%
  mutate(terminal_fct = factor(terminal, labels = c("Nonterminal", "Terminal"))) %>%
  group_by(age, terminal_fct, ageclass) %>%
  summarize(
    prop_surv = mean(is_survive, na.rm = TRUE),  # Proportion of survival
    se_prop = sqrt((prop_surv * (1 - prop_surv)) / n()),  # Standard error of the proportion
    .groups = "drop"
  ) %>%
  mutate(age = age + 0.15 * ifelse(terminal_fct == "Terminal", 1, -1))  


#And please work??
ggplot(surv_pred_pop, aes(x = age, y = predicted_prob_survival)) +
  geom_pointrange(aes(
    y = prop_surv, 
    ymin = prop_surv - 1.96 * se_prop, 
    ymax = prop_surv + 1.96 * se_prop, 
    linetype = terminal_fct,   
    color = ageclass
  ), surv_summ) +
  geom_line(aes(
    linetype = terminal_fct,    
    color = ageclass            
  ), linewidth = 1.2) +     
  geom_vline(xintercept = maturity + 0.5, linetype = "dashed", color = "#9B59B6") +  

  theme_minimal() +
  theme(
    panel.background = element_rect(fill = "#F9F9F9"),
    axis.title.x = element_text(color = "#8E44AD", size = 14, face = "bold"),
    axis.title.y = element_text(color = "#8E44AD", size = 14, face = "bold"),
    axis.text.x = element_text(color = "#7F8C8D", size = 12),
    axis.text.y = element_text(color = "#7F8C8D", size = 12),
    plot.subtitle = element_text(hjust = 0.5, size = 12, color = "purple"),
    plot.title = element_text(hjust = 0.5, size = 18, face = "italic", color = "#8E44AD")
  ) +
  labs(
    title = "Pup Survival Probability by Maternal Age", 
    subtitle = "Terminal vs Non-Terminal Mothers",
    x = "Mother's Age (Years)", 
    y = "Probability of Pup Survival"
  ) +
  scale_color_manual(values = c("#D5A6F6", "#6DD5B3", "#9B59B6", "#66B2B2")) +
  scale_fill_manual(values = c("#D5A6F6", "#6DD5B3", "#9B59B6", "#66B2B2"))
```
