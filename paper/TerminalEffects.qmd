---
title: "Studying Terminal Effects in Northern Elephant Seals"
format:
  html:
    echo: false
    fig-width: 7
    fig-height: 5
    code-fold: true
    code-tools: true
    warning: false
    toc: true
editor: visual
---

```{r}
#| label: setup
#Libraries:
library(tidyverse)
library(ggplot2)
library(lme4)
sealdat <- read_csv(here::here("data/Adrien Data Pull 2024_12_06.csv"))
cleanseal <- sealdat %>% filter(!is.na(animalID), !is.na(year), !is.na(observed), !is.na(tagsex), !is.na(firstobsbreed), !is.na(lastobsbreed), !is.na(calyear), !is.na(firstobsbreeddoy), !is.na(pupID), !is.na(pupsex), !is.na(yearborn), !is.na(age), !is.na(Wt)) #Clears out all the NA's from the sealdat set to have easier to understand data... less intimidating

# ggplot(cleanseal, aes(x = Wt, y = age, color = pupsex)) +
#   geom_point(alpha = 0.5, size = 3) +  # Transparent points for less clutter
#   geom_smooth(method = "lm", se = FALSE) +  # Line of best fit 
#   labs(
#     title = "Relationship between Weight and Age by Pup Sex",
#     x = "Weight",
#     y = "Age"
#   ) +
#   theme_minimal()

# #Making a Bargraph to start Comparing Age to sex, bleh made before
# ggplot(age_sealgraph, aes(x = factor(age), y = percent, fill = pupsex)) +
#   geom_bar(stat = "identity", position = "stack") +  # Stack bars
#   labs(
#     title = "Percentage Distribution by Age and Pup Sex",
#     x = "Age",
#     y = "Percentage"
#   ) +
#   theme_minimal()

    #Lets add to this by changing ages 18-21 as just old ages kinda how we did for age paper 

# age_sealgraph <- age_sealgraph %>% 
  # filter(!(age %in% c(18, 19, 20, 21)))
# ggplot(age_sealgraph, aes(x = factor(age), y = percent, fill = pupsex)) +
#   geom_bar(stat = "identity", position = "stack") +
#   geom_hline(yintercept = 50, linetype = "dotted", color = "black", size = 1) +
#   labs(
#     title = "Percentage Distribution by Age and Pup Sex",
#     x = "Age",
#     y = "Percentage"
#   ) +
#   theme_minimal()

#Age vs weight or their pup? wowww
ggplot(cleanseal, aes(x = age, y = Wt, color = pupsex)) +
  geom_point() +  # Scatter plot for weight vs. age
  geom_smooth(method = "loess", se = FALSE) +  # Line of best fit (linear regression)
  labs(
    title = "Looking at Weight Relation to Age of Mother",
    x = "Age",
    y = "Weight"
  ) +
  theme_minimal()

#Average weight in the years? 
#FIRST find average weights
# avg_weights <- cleanseal %>%
#   group_by(age) %>%
#    filter(!(age %in% c(18, 19, 20, 21))) %>%
#   summarise(avg_weight = mean(Wt, na.rm = TRUE))
# ggplot(avg_weights, aes(x = age, y = avg_weight)) +
#   geom_point() +
#   geom_smooth(method = "loess")


#Calculating lactation duration, can i make this cleaner somehow? 
cleanseal$firstobsbreed <- as.Date(cleanseal$firstobsbreed, format = "%Y-%m-%d")
cleanseal$lastobsbreed <- as.Date(cleanseal$lastobsbreed, format = "%Y-%m-%d")
cleanseal$lactation_duration <- as.numeric(difftime(cleanseal$lastobsbreed, cleanseal$firstobsbreed, units = "days"))
#OK.. lets get the avg lact dur? then rerun code above
avg_lactation <- cleanseal %>%
  group_by(age) %>%
  summarize(avg_lact = mean(lactation_duration, na.rm = TRUE))
#YASS THAT WORKSSS SOOO NOW LETS PLOT AGAINST THE MALE V F LACT PERIOD FOR AGES IN LAST YEARS OF LIFE 
ggplot(avg_lactation, aes(x= age, y= avg_lact)) +
         geom_point() +
         geom_smooth(method = "loess") +
         labs(
           title ="lactation duration in ages",
           x = "age", 
           y = "lact_duration")



```

Age seems to be calculated incorrectly

Both males and females included in data, not sure if we will need males

Figure out how to operate github pages

how can we see how many of those animals went on to have pups of their own?

```{r}
#Calculating Bio age
head(sealdat)
sealdat$animalID

sealdat %>% filter(animalID == 170, observed == 1) %>% 
  mutate(age = year - yearborn, 
         max_age = max(age), 
         bio_age = max_age - age) %>% view()
#Bioage clean
bioseal <- sealdat %>% filter(observed == 1, tagsex == "F") %>%
  group_by(animalID) %>%
  mutate(age = year - yearborn, 
         max_age = max(age), 
         bio_age = max_age - age) %>%
  filter(age > 2)

#Playing with bio pup sex
ggplot(bioseal, aes(x = Wt, y = age, color = pupsex)) +
  geom_point(alpha = 0.5, size = 3) +  # Transparent points for less clutter
  geom_smooth(method = "lm", se = FALSE) +  # Line of best fit 
  labs(
    title = "Relationship between Weight and Age by Pup Sex",
    x = "Weight",
    y = "Age"
  ) +
  theme_minimal()

#Looking at weights? Come back to 
# ggplot(bioseal, aes(x = bio_age, y = Wt)) +
#   geom_point() +
#   geom_smooth(method = "loess")

#Calculate Lactation Duration
bioseal$firstobsbreed <- as.Date(bioseal$firstobsbreed, format = "%Y-%m-%d")
bioseal$lastobsbreed <- as.Date(bioseal$lastobsbreed, format = "%Y-%m-%d")
bioseal$lactation_duration <- as.numeric(difftime(bioseal$lastobsbreed, bioseal$firstobsbreed, units = "days"))
#Calculate Average lac for bio age 
avg_lactation <- bioseal %>%
  group_by(bio_age) %>%
  summarize(avg_lact = mean(lactation_duration, na.rm = TRUE))



```

OK.. I gotta clean stuff up fr

```{r}
#Lets restart.. lets look at our first idea! How do mothers in their last year haul out? Early or later.. 

# ggplot(bioseal, aes(x = bio_age, y= firstobsbreeddoy))+
#          geom_point()+ 
#          geom_smooth(method = "loess") +
#          labs( 
#            title = "Do moms in their last year arrrive early?", 
#            x = "Years before death", 
#            y = "arrival time")
#            
# 
# #Then we wanted to see lactation duration
# ggplot(avg_lactation, aes(x= bio_age, y= avg_lact)) +
#          geom_point() +
#          geom_smooth(method = "loess") +
#          labs(
#            title ="lactation duration in ages",
#            x = "age", 
#            y = "lact_duration")

# #Then Weights?
# ggplot(bioseal, aes(x = bio_age, y = Wt)) +
#   geom_point() +
#   geom_smooth(method = "loess")

```

```{r}
# #modify bioseal to have lactation duration
# bioseal$firstobsbreed <- as.Date(bioseal$firstobsbreed, format = "%Y-%m-%d")
# bioseal$lastobsbreed <- as.Date(bioseal$lastobsbreed, format = "%Y-%m-%d")
# bioseal$lactation_duration <- as.numeric(difftime(bioseal$lastobsbreed, bioseal$firstobsbreed, units = "days"))
# #Random effect model
library(lme4)
lact_dat <- bioseal %>%
  filter(lactation_duration > 0) %>%
  select(animalID,
         bio_age,
         lactation_duration,
         year)
# lact_dat1 <- bioseal %>%
#   filter(lactation_duration > 0) %>%
#   select(animalID,
#          bio_age,
#          lactation_duration,
#          year)

# 
# 
# lact_dat2 <- lact_dat %>% 
#   mutate(year_fct = factor(year), 
#          (lac_rescale = (lactation_duration - mean(lactation_duration))) / 10)
#   
# 
# #If it is binomial we can do .. but maybe not??
# lact_mod <- glmer.nb(
#   lac_rescale ~ bio_age + (1 | animalID),
#   data = lact_dat)
# 
# #control = glmerControl(optimizer = "bobyqa")
# 
# 
# #if it is continuos we can do 
# lact_mod <- lmer(
#   lac_rescale ~ bio_age + (1 | year),  # Fixed and random effects
#   data = lact_dat, 
#   control = lmerControl(optimizer = "bobyqa")
# )
# summary(lact_mod)
# 
# #going with the continuous we should be able to graph or calculate predicted values 
# lact_dat$predicted <- predict(lact_mod, type = "response")
# 
# #and then to graph 
# ggplot(lact_dat, aes(x = bio_age, y = lactation_duration)) +
#   geom_point(aes(color = animalID), alpha = 0.6) +  # Observed points
#   geom_smooth(method = "loess", se = FALSE) +
#   theme_minimal()
```

In some species terminal investment shows only in early years of reproduction, or during prime ages for breeding but often not in older ages due to senescence

Lets look at prime ages instead??

```{r}
#this should give us the same data set but only with prime ages 7-11
# primeseal <- bioseal %>%
#   filter(age >= 7 & age <= 11)
# 
# #sumthing
# ggplot(primeseal, aes(x = bio_age, y = Wt)) +
#   geom_point() +
#   geom_smooth(method = "loess")

```

New Idea:\
We want to create a threshold that has a prime age threshold in the figure. Ideally, it should show chronological age on the x axis and lactation duration on the y axis.

However, since we only were interested in looking at the last years of life to examine terminal investment we FILTERED out animals as bio_age \> 0. We still looked at chronological age to see how lactation duration changes in the last years of life among different age classes. We potentially will define animals as YOUNG OR OLD also to make it binomial.

Nothing is really shown maybe? It look's like its just the same result.. so I tried looking at the average lactation duration instead amongst ages and then plotted that. Eh.

```{r}
# bio_seal2 <- bioseal %>%
#   filter(bio_age < 1) %>%
#   group_by(age) %>%
#   mutate(avg_lact_dur = mean(lactation_duration, na.rm = TRUE)) %>%
#   ungroup() 
  
  
# 
# #Lactation Duration across ages
# ggplot(bio_seal2, aes(x = age , y = lactation_duration)) +
#          geom_point()+
#          geom_smooth(method = "lm" , se = TRUE)+
#   labs(title = "Lactation Duration Across Ages in Last Years", 
#        x = "age" , 
#        y = "Lactation Duration")
# 
# #Average Lactation Durate across Age
# ggplot(bio_seal2, aes(x = age , y = avg_lact_dur)) +
#          geom_point()+
#          geom_smooth(method = "loess" , se = TRUE)+
#   labs(title = "Lactation Duration Across Ages in Last Years", 
#        x = "age" , 
#        y = "Lactation Duration")

```

POST MAX:

We will have :

L be lactation duration

A = chronological age

T = terminal (0 or 1 to create a yes no situation)

C = age category (young or old) we define young as ages 3-7 and old as 8+

In order to graph this we will look at L \~ Gamma(mean, sd)... mean = overall mean +coefficient for chronological age

When coding this it would be like: Stay tuned.

```{r}

# # This is gamma
# mod1 <- glmer(lactation_duration ~ age + terminal:ageclass + (1 | year),
#               family = Gamma(link = "inverse"),
#               data = lact_dat, 
#               control = glmerControl(optimizer = "bobyqa"))


# mod3 <- glmer(
#   lactation_duration ~ age + terminal:ageclass + (1 | year),
#   family = Gamma(link = "inverse"),
#   data = lact_dat,
#   control = glmerControl(optimizer = "bobyqa", optCtrl = list(maxfun = 10000))
# )

neg.bin <- glmer.nb(
  lactation_duration ~ age + terminal : ageclass + (1 | year),
  family = Gamma(link = "inverse"),
  data = lact_dat,
  control = glmerControl(optimizer = "bobyqa"))

# plot(neg.bin)
# summary(neg.bin)

#Lets try new stuff
#negative binomial
neg.binomial = glm(lactation_duration ~ age, data=lact_dat, family = quasipoisson())
par(mfrow=c(2,2))  # Arrange multiple plots in a grid
plot(neg.binomial)  # This will produce multiple diagnostic plots
summary(neg.binomial)

neg.binomial = glm(lactation_duration ~ age10 + terminal : ageclass + (1| animalID) + (1| year),
                   data=lact_dat, 
                   family = quasipoisson()
                     )

summary(neg.binomial)$coefficients

#compare.fits(lactation_duration ~ age, data = lact_dat, poisson, neg.binomial, jitter = c(0, .1))
neg.binomial <- glm(lactation_duration ~ age, data=lact_dat, family = quasipoisson())

```

So now lets make some figures for some not so important findings just to put into my thesis right now.

```{r}
# #Lactation duration vs weight
# ggplot(lact_dat, aes(x = lactation_duration, y = Wt , color = pupsex))+ 
#        geom_point() +
#        geom_smooth(method = "lm", se = TRUE)+
#   labs(title = "Lactation Duration Effect on Weight",
#        x = "lactation duration", 
#        y = "Wean Weight")
# 
# #Lactation duration against Biological age 
# ggplot(lact_dat, aes(x = bio_age, y = lactation_duration ))+ 
#        geom_point() +
#        geom_smooth(method = "lm", se = TRUE)+
#   labs(title = "Lactation Duration Effected by Last year",
#        x = "Biological Age", 
#        y = "lactation duration")
```

```{r}
#First let's make a new data set for this graph called (well really just adding to the lact_dat data set already there... i went ahead and moved all that code below now. )
maturity <- 5
lact_dat <- bioseal %>% 
  filter(lactation_duration > 0 & lactation_duration < 45) %>% 
  select(animalID, bio_age, lactation_duration, year, pupsex, Wt, age) %>% 
  mutate(terminal = ifelse(bio_age == 0, 1, 0), 
         ageclass = ifelse(age <= maturity, "young", "old"),
         age10 = (age - maturity) / 10, 
         year_fct = factor(year))

# view(lact_dat)

  #So now we can...do stuff.. starting with Gamma vs negative binomial distribution 
#Negative Binomial model
lac_mod <- glmer.nb(
  lactation_duration ~ age10 + terminal:ageclass + (1 | year) + (1 | animalID),
  data = lact_dat
)

summary(lac_mod)
summary(lac_mod)$coefficients

#Adrien points out that we need to be sure they are dead... 7 years like the Age paper
#creating prediction grid (so that we can use confidence intervals later)
lac_grid <- expand_grid(
  age = 3:22, 
  terminal = 0:1) %>% 
  mutate(age10 = (age - maturity) / 10, 
         ageclass = ifelse(age <= maturity, "young", "old"))

lac_years <- count(lact_dat, year_fct)

#create population predictions 
lac_pred_pop <- lac_grid %>% 
  mutate(predicted = predict(lac_mod, 
                             newdata = lac_grid, 
                             re.form = NA, 
                             type = "response"),
         terminal_fct = factor(terminal, labels = c("Nonterminal", "Terminal")))

#plot predictions, raw data, and residuals (residuals separately - resid on y axis, predictors on the x axis)

#Plot 1:
#first left join the columns
lact_dat <- lact_dat %>%
  left_join(lac_pred_pop %>% select(age, terminal, predicted), by = c("age", "terminal"))

#Now calculate residuals
lact_dat <- lact_dat %>%
  mutate(residuals = lactation_duration - predicted)

#Need to add age class to lac_pred_pop
lac_pred_pop <- lact_dat %>%
  mutate(ageclass = ifelse(age >= maturity, "old", "young"))

#predictions: 
predictions <- predict(lac_mod, newdata = lac_pred_pop, re.form = NA, type = "response", se.fit = TRUE)
#Create confidence intervals:
lac_pred_pop <- lac_pred_pop %>%
  mutate(
    predicted = predictions$fit,
    se_fit = predictions$se.fit,
    conf_lo = predicted - 1.96 * se_fit,  # Lower bound of 95% CI
    conf_hi = predicted + 1.96 * se_fit   # Upper bound of 95% CI
  )


```

Trying to plot the predictions:

```{r}
# # Predictions vs Raw Data Plot
lact_summ <- lact_dat %>% 
  ungroup() %>% 
  mutate(terminal_fct = factor(terminal, labels = c("Nonterminal", "Terminal"))) %>% 
  group_by(age, terminal_fct, ageclass) %>% 
  summarize(mean_lact = mean(lactation_duration),
            se_lact = sd(lactation_duration) / sqrt(n()),
            .groups = "drop") %>% 
  mutate(age = age + 0.15 * ifelse(terminal_fct == "Terminal", 1, -1))
ggplot(lac_pred_pop, aes(x = age, y = predicted)) +
  geom_pointrange(aes(y = mean_lact,
                      ymin = mean_lact - 1.96 * se_lact,
                      ymax = mean_lact + 1.96 * se_lact,
                      linetype = terminal_fct,
                      color = ageclass),
                  lact_summ) +
  geom_line(aes(linetype = terminal_fct, color = ageclass), 
            linewidth = 1.2) +  # Dotted predicted lines 
  geom_vline(xintercept = maturity + 0.5, linetype = "dashed")


+  # Predicted lines by age class and year
#   geom_ribbon(aes(ymin = conf_lo, ymax = conf_hi, fill = ageclass), alpha = 0.2) +  # Confidence intervals
#   geom_line(aes(color = ageclass), linewidth = 1.2) +  # Mean predicted line by age class
#   geom_pointrange(aes(y = lactation_duration), alpha = 0.5, color = "blue", size = 0.8) +  # Raw data summarized by points
#   theme_minimal() +
#   labs(title = "Predictions vs Raw Data", y = "Lactation Duration", x = "Age")
# 
# 
# 
# 
# #Residuals Plot
# residuals_plot <- ggplot(lact_dat, aes(x = age, y = residuals)) +
#   geom_point(alpha = 0.5, color = "gray") +
#   geom_hline(yintercept = 0, linetype = "dashed", color = "red") +
#   theme_minimal() +
#   labs(title = "Residuals vs Age", y = "Residuals", x = "Age")
# 
# #Arrange grids
# grid.arrange(lact_plot, residuals_plot, ncol = 2)
```

```{r}
lac_grid <- expand_grid(
  age = 3:22, 
  terminal = 0:1
) %>% 
  mutate(age10 = (age - maturity) / 10, 
         ageclass = factor(ifelse(age <= maturity, "young", "old"), 
                           levels = c("young", "old")))

```
